{"version":3,"sources":["api/apiClient.js","components/function/jumpToSite.js","components/ModalC.js","components/Banner.js","App.js","index.js"],"names":["endpoint","a","body","method","customConfig","headers","config","JSON","stringify","endpointFinal","charAt","substring","fetch","encodeURI","then","response","status","json","data","ok","Promise","reject","setSeason","document","getElementById","value","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","ModalC","props","season","animeData","useState","modalIsOpen","setIsOpen","episodes","setEpisodes","val","i","oldArray","total_ep","episode","quality","window","open","id","onClick","isOpen","onRequestClose","style","contentLabel","map","item","idx","getSeason","jumpToSite","Banner","allAnimeData","className","src","titles","images","poster","sm","alt","name","App","setAllAnimeData","useEffect","apiClient","console","log","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.011adb10.chunk.js","sourcesContent":["export default async function apiClient(\n    endpoint,\n    { body, method, ...customConfig } = {}\n) {\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n\n    const config = {\n        method: method ? method : body ? \"POST\" : \"GET\",\n        ...customConfig,\n        headers: headers,\n    };\n\n    if (body) {\n        config.body = JSON.stringify(body);\n    }\n\n    const endpointFinal =\n        endpoint.charAt(0) === \"/\" ? endpoint.substring(1) : endpoint;\n\n    return fetch(\n        encodeURI(`https://api.anikodcdn.net/${endpointFinal}`),\n        config\n    ).then(async (response) => {\n        if (response.status === 401) {\n            // todo log out\n            return;\n        }\n\n        const data = await response.json();\n        if (response.ok) {\n            return data;\n        } else {\n            return Promise.reject(data);\n        }\n    });\n}\n","export function setSeason() {\n    let v = document.getElementById(\"season\").value;\n    return v;\n}\n","import { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport { setSeason } from \"./function/jumpToSite\";\n\nconst customStyles = {\n    content: {\n        top: \"50%\",\n        left: \"50%\",\n        right: \"auto\",\n        bottom: \"auto\",\n        marginRight: \"-50%\",\n        transform: \"translate(-50%, -50%)\",\n    },\n};\n\nModal.setAppElement(\"#root\");\n\nfunction ModalC(props) {\n    const season = props.animeData;\n    const [modalIsOpen, setIsOpen] = useState(false);\n    const [episodes, setEpisodes] = useState([]);\n\n    function openModal() {\n        setIsOpen(true);\n    }\n\n    function closeModal() {\n        setIsOpen(false);\n    }\n\n    async function getSeason() {\n        let val = await setSeason();\n\n        setEpisodes([]);\n\n        for (let i = 1; i <= season[val].total_ep; i++) {\n            setEpisodes((oldArray) => [...oldArray, i]);\n        }\n    }\n\n    async function jumpToSite() {\n        let val = await setSeason();\n        let episode = await document.getElementById(\"episodes\").value;\n        let quality = await document.getElementById(\"quality\").value;\n\n        window.open(\n            `https://anikodcdn.net/static/media/mp4/${season[val].id}/${episode}_${quality}.mp4`,\n            \"_blank\"\n        );\n    }\n\n    return (\n        <div>\n            <button onClick={openModal}>Үзэх</button>\n            <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={closeModal}\n                style={customStyles}\n                contentLabel=\"Example Modal\"\n            >\n                <div>\n                    Ehleed seasonoo taaruulaad daraa n angia songood uzeh\n                    darsnii daraa link garch irne tuhain linkruu orood video\n                    garch irehgui bol refreshdeed uzne uu.\n                </div>\n                <div>\n                    Uliral:\n                    <select id=\"season\">\n                        {season.map((item, idx) => {\n                            return <option key={idx}>{idx}</option>;\n                        })}\n                    </select>\n                    <button onClick={() => getSeason()}>set Season</button>\n                </div>\n                <div>\n                    Angi:\n                    <select id=\"episodes\">\n                        {episodes.map((item, idx) => {\n                            return <option key={idx}>{idx + 1}</option>;\n                        })}\n                    </select>\n                </div>\n                <div>\n                    Chanar:\n                    <select id=\"quality\">\n                        <option>720</option>\n                        <option>480</option>\n                    </select>\n                </div>\n                <button onClick={() => jumpToSite()}>Uzeh</button>\n            </Modal>\n        </div>\n    );\n}\n\nexport default ModalC;\n","import React from \"react\";\nimport \"./css/Banner.css\";\nimport ModalC from \"./ModalC\";\n\nfunction Banner(props) {\n    const animeData = props.allAnimeData;\n\n    return (\n        <div className=\"Banner\">\n            <img\n                src={\n                    \"https://api.anikodcdn.net/\" +\n                    animeData.titles[0].images.poster.sm\n                }\n                alt={animeData.name}\n            />\n            <span className=\"titile\">{animeData.name}</span>\n            <ModalC animeData={animeData.titles} />\n        </div>\n    );\n}\n\nexport default Banner;\n","import { useEffect, useState } from \"react\";\nimport apiClient from \"./api/apiClient\";\nimport Banner from \"./components/Banner\";\nimport \"./components/css/Banner.css\";\n\nfunction App() {\n    const [allAnimeData, setAllAnimeData] = useState([]);\n\n    useEffect(() => {\n        apiClient(\"api/franchises?has_titles=true&sort=id_desc\", {\n            method: \"GET\",\n        }).then((response) => {\n            // console.log(response);\n            setAllAnimeData(response);\n        });\n        return () => {\n            console.log(\"clear up\");\n        };\n    }, []);\n\n    return (\n        <div className=\"BannerContainer\">\n            {allAnimeData.map((item) => {\n                return <Banner allAnimeData={item} key={item.id} />;\n            })}\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}